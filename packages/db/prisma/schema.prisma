// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum SellingScope {
  COLLEGE_ONLY
  ALL_COLLEGES
}

model User {
  id        String   @id @default(uuid())
  name      String?
  email     String   @unique
  password  String
  image     String?
  college   String   // User's college name
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  items     ProductListing[]
  comments  Comment[]
  reviews   Review[]
}

model ProductListing {
  id           String       @id @default(uuid())
  title        String
  description  String
  price        Float
  imageUrl     String?
  isSold       Boolean      @default(false)
  tags         String[]
  userId       String
  college      String       // College where item is listed
  sellingScope SellingScope @default(COLLEGE_ONLY)
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt

  // Relations
  user     User      @relation(fields: [userId], references: [id])
  comments Comment[]
  reviews  Review[]
}

model Comment {
  id        String   @id @default(uuid())
  content   String
  userId    String
  productId String
  createdAt DateTime @default(now())

  // Relations
  user    User           @relation(fields: [userId], references: [id])
  product ProductListing @relation(fields: [productId], references: [id])
}

model Review {
  id        String   @id @default(uuid())
  rating    Int      @default(0) // 1 to 5 scale
  comment   String?
  userId    String
  productId String
  createdAt DateTime @default(now())

  // Relations
  user    User           @relation(fields: [userId], references: [id])
  product ProductListing @relation(fields: [productId], references: [id])
}
